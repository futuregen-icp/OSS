# 웹서버란
사용자가 브라우저를 이용해 웹 사이트에 접속하면 웹서버에게 html파일을 요청하게되고, 그 요청을 받은 웹서버는 사용자에게 html파일을 제공함으로써 브라우저를 이용해 웹페이지를 볼수있게 된다.
동작 방식으론 정적인 웹서버와 동적인 웹서버로 나뉜다.

- 정적인 웹서버는 단순히 html문서만을 사용자에게 제공하기 때문에 아파치 웹 서버 하나면 구동가능하다.
- 동적인 웹서버는 사용자의 요구에 따라 다양한 웹 페이지를 제공한다.이를 구성하기 위해 php와 mysql을 연계해서 사용한다.
# APM
웹서버를 구성할때 가장 많이 쓰이는 Apache , PHP , Mysql 의 첫글자를 인용해 만든 이름.

 - 

## Apache : http 웹서버

 Apache란 소프트웨어 단체 이름이다. 아파치 소프트웨어 재단에서 관리하고 있는 월드와이드 웹 서버용 소프트웨어로 오픈 소스로 제공된다. 


## PHP : c언어 기반의 웹프로그래밍 언어

php는 스크립트 형식으로 되어있어 작성된 html 코드 안에 추가 해주면 서버에서 php코드를 해석해서 웹 페이지를 생성한다.정적 모듈과 동적 모듈이 있고 정적모듈을 사용하면 php가 아파치에 고정 되고 처리속도가 빠르다.동적 모듈은 보통 DSO라 불리고 클라이언트의 요청이 있을 때 프로세스에 포함되는 방식이다.언제든지 다른 모듈이나 라이브러리를 적재할수 있다. 

## Mysql : 오픈소스 RDBMS
*관계형 데이터베이스 관리 시스템(RDBMS)*으로 mysql AB사가 개발 하여 배포하는 오픈소스 데이터 베이스이다.
- 용어정리
-- 스키마 (Schema): 데이터베이스의 구조와 제약 조건에 관한 전반적인 명세를 기술한 집합.
-- 쿼리(Query) : 데이터베이스에 정보를 요청하는것. 질의
-- SQL : 관계형 데이터베이스 관리 시스템의 데이터를 관리하기 위해 설계된 특수 목적의 프로그래밍 언어

## APM구동원리

클라이언트->Apache->PHP->Mysql->DB->Mysql->PHP->Apache->클라이언트

--클라이언트에서 출발하여 DB에 있는 정보까지 도달하면, 다시 클라이언트로 되돌아 오는 형태이다. 

## WAS(Web Application Server)
DB 조회나 다양한 로직 처리를 요구하는 동적인 컨텐츠를 제공하기 위해 만들어진 어플리케이션 서버 ex)Tomcat
웹 컨테이너 혹은 서블릿 컨테이너라고도 불린다.
즉, Was = Web server + Web container

## Web 서버와 Was 구분
자원 이용의 효율성 및 장애 극복 , 배포 및 유지보수의 편의성을 위해 웹서버와 WAS를 분리하여 사용한다.

![enter image description here](https://camo.githubusercontent.com/5ba9c98e29a385a593c1f86546a00dd69b6f977f/68747470733a2f2f676d6c776a64393430352e6769746875622e696f2f696d616765732f7765622f7374617469632d76732d64796e616d69632e706e67)


## APM 바이너리 설치
<교본에 안내된 버전으로 설치>
 - [ apache httpd-2.2.4 설치]
 - wget http://archive.apache.org/dist/httpd/httpd-2.2.4.tar.gz  다운로드 후
 - tar -zxvf httpd-2.2.4.tar.gz 압축 해재 
 - [  mysql-5.0.37 설치 ]
 - wget https://downloads.mysql.com/archives/get/p/23/file/mysql-5.0.37.tar.gz 다운로드 
 - tar -zxvf mysql-5.0.37.tar.gz 압축 해재
 - [ PHP-5.3.4 설치]
 - wget http://museum.php.net/php5/php-5.3.4.tar.gz
 - tar -zxf php-5.3.4.tar.gz 압축 해재 

> php 5.2.x 릴리즈에 컴파일 오류로 5.3.4 설치 ,
 구글링하여 패치 파일 설치 
## 필요 컴파일러 및 라이브러리 설치
 1. yum -y install gcc cpp gcc-c++ compat-gcc-32-g77 flex
 2. yum -y install libjpeg-devel libpng-devel freetype-devel gd-devel 
--컴파일러 : 번역프로그램 
원시프로그램->컴파일러->타겟프로그램
> 설치순서 : mysql -> apache -> php
## mysql 설치
 1. mysql 사용자 계정 생성
useradd -M -s /bin/false mysql 
tip) 쉘 사용권이 없고 유저 기본 디렉터리를 만들지 않음
2. ./configure실행 
./configure --prefix=/usr/local/server/mysql --with-charset=utf8 --with-extra-charset=all
--옵션 값 
/usr/local/server/mysql 바이너리 설치 경로 지정,
기본 문자셋을  utf8 지정 -한글깨짐방지, 추가 charset 지정
3. make && make install
4. 환경설정 샘플파일을 my.cnf 로 복사
cp support-files/my-large.cnf /etc/my.cnf
5. 기본 DB 생성
cd /server/mysql 
bin/mysql_install_db --user=mysql
6. 디렉토리 권한 설정 
 chown -R root . 
 chown -R mysql var
 chgrp -R mysql .
-R : 경로와 하위 파일을 모두 변경한다. 
> 컴파일 오류 // yum -y install libtermcap-devel ncurses-devel / 라이브러리 추가 설치 //컴파일오류시 make >& error.txt 로 확인할것!
7. 환경변수 등록
vi ~/.bash_profile  
source ~/.bash_profile
8. 자동실행 설정
- cp share/mysql/mysql.server /etc/init.d/mysqld 
- chkconfig --add mysqld
mysql의 실행 파일을 /etc/init.d에 복사하고 chkconfig 명령어로 추가해 준다.
- 확인 : chkconfig --list | grep mysql
 - 실행 : /etc/init.d/mysqld start

# apache 설치

 1. ./configure 실행
 ./configure --prefix=/usr/local/server/apache --enable-mods-shared=all --enable-so --enable-rewrite 
- 옵션 
- --enable-mods-shared=all : 모든 모듈을 DOS 모드로 작성한다.
- --enable-so : DOS모듈 활성화.
- --enable-rewrite : URL 재작성 모듈을 활성화 한다.
 2. 컴파일 및 설치파일 설치
make && make install
3. 자동실행 설정 
cp /usr/local/server/apache/bin/apachectl /etc/init.d/httpd
vi /etc/init.d/httpd 에 코드 설정 [enter link description here](http://jobdahan.net/server_linux/1498282)
4. 환경설정 
User nobody
Group nobody
=기본값인 daemon 에서 nobody로 변경한다. root권한으로 실행된 아파치의 하위 프로세스를 이곳에서 지정한 사용자로 실행한다는 뜻 
ServerName study2.test.fu.igotit.co.kr
= 클라이언트에게 보여주는 호스트의 이름을 지정.도메인 or IP주소
ServerRoot "/usr/local/server/apache"
=apache웹서버가 설치된 절대경로 마지막에 /는 입력하지 않는다. 이후에 나오는 대부분의 경로들은 이 경로에 대한 상대경로로 지정이됨.
DocumentRoot "/var/www/html"
=아파치 웹서버의 웹 문서가 있는 경로를 설정한다(*.html, *.php) 브라우저에서 도메인으로 접속하면 설정한 디렉토리에서 index 파일을 찾는다.
<Directory "/var/www/html"> 
		Options Indexes FollowSymLinks
		AllowOverride None
		Order allow,deny
        Allow from all 
 </ Directory>
=지시자는 해당 디렉토리 이하의 모든 웹문서를 어떻게 제어할 것인지를 설정
## firewall-cmd 설정
firewall-cmd --permanent --add-port=80/tcp
firewall-cmd --permanent --add-service=http
firewall-cmd --list-all 
> https://webdir.tistory.com/178 http.conf 옵션값 설명

## php 설치

1. ./configure 실행
./configure --prefix=/usr/local/server/php --with-apxs2=/usr/local/server/apache/bin/apxs --with-mysql=/usr/local/server/mysql --with-config-file-path=/usr/local/server/apache/conf --disable-debug --enable-safe-mode --enable-track-vars --enable-sockets --with-mod_charset --with-charset=utf8 --with-xml --with-language=korean --enable-mailparse --enable-calender --enable-sysvsem=yes --enable-sysvshm=yes --enable-ftp --enable-magic-quotes --enable-gd-native-ttf --enable-url-includes --enable-inline-optimization --enable-bcmath --with-jpeg --with-png --with-zlib --with-jpeg-dir=/usr --with-png-dir=/usr/lib --with-freetype-dir=/usr --with-libxml-dir=/usr --enable-exif --with-gd --with-gettext --enable-sigchild --enable-mbstring
- 옵션값 
---with-apxs2=/usr/local/server/apache/bin/apxs 
= 아파치의 apxs를 이용해 아파티에 모듈을 적재한다 
 ---with-mysql=/usr/local/server/mysql
 = Mysql과 연동
 --with-config-file-path=/usr/local/server/apache/conf
 = php환경설정 파일인 php.ini가 생성될 위치 지정
  나머지는 라이브러리들을 포함하는 옵션들
 2. make && make install
  
 컴파일과 설치가 되었다면 /usr/local/server/php 에 설치가 되고
 환경 설정 파일은 /usr/local/server/apache/conf 에 설정해야 한다. http.conf 설정의 DocumentRoot "/var/www/html" 로 세팅이 되어 있으므로 해당 디렉토리로 설정해도됨.

 4. 환경설정
- cp php.ini-* /usr/local/server/apache/conf/php.ini
환경설정 파일은 php.ini-으로 샘플을 제공한다. ./configure에서 환경설정파일의 경로로 복사한다.
 - http.conf 수정
DirectoryIndex index.html index.htm index.php
 AddType application/x-httpd-php .php
 AddType application/x-httpd-php-source .phps
 
 아파치와의 연동을 위해 DirectoryIndex에 index.php를 추가하고 , mime_moudule에 .php로된 파일을 php문서로 인식할수 있게 AddType지시어를 이용해 설정한다.

> php-5.2.X  컴파일 오류로 소스파일이 있는 디렉토리에 패치파일 다운로드 받아 실행
> wget -O php.patch  https://mail.gnome.org/archives/xml/2012-August/txtbgxGXAvz4N.txt 
> patch -p0 pb < php.patch	




